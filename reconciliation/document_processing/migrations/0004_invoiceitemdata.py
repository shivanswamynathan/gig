# Generated by Django 5.2.3 on 2025-06-25 13:40

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('document_processing', '0003_invoicedata'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvoiceItemData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_description', models.CharField(max_length=1000, verbose_name='Item Description')),
                ('hsn_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='HSN Code')),
                ('quantity', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0000'))], verbose_name='Quantity')),
                ('unit_of_measurement', models.CharField(blank=True, max_length=20, null=True, verbose_name='Unit of Measurement')),
                ('unit_price', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0000'))], verbose_name='Unit Price')),
                ('invoice_value_item_wise', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Item-wise Invoice Value')),
                ('cgst_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='CGST Rate')),
                ('cgst_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='CGST Amount')),
                ('sgst_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='SGST Rate')),
                ('sgst_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='SGST Amount')),
                ('igst_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='IGST Rate')),
                ('igst_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='IGST Amount')),
                ('total_tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Tax Amount')),
                ('item_total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Item Total Amount')),
                ('po_number', models.CharField(blank=True, db_index=True, max_length=200, null=True, verbose_name='PO Number')),
                ('invoice_number', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='Invoice Number')),
                ('vendor_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Vendor Name')),
                ('item_sequence', models.PositiveIntegerField(default=1, verbose_name='Item Sequence')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('invoice_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_items', to='document_processing.invoicedata', verbose_name='Invoice Data')),
            ],
            options={
                'verbose_name': 'Invoice Item Data',
                'verbose_name_plural': 'Invoice Items Data',
                'db_table': 'invoice_item_data',
                'ordering': ['invoice_data', 'item_sequence'],
                'indexes': [models.Index(fields=['po_number'], name='invoice_ite_po_numb_2991a8_idx'), models.Index(fields=['invoice_number'], name='invoice_ite_invoice_d345b8_idx'), models.Index(fields=['hsn_code'], name='invoice_ite_hsn_cod_408402_idx'), models.Index(fields=['vendor_name'], name='invoice_ite_vendor__047635_idx'), models.Index(fields=['invoice_data', 'item_sequence'], name='invoice_ite_invoice_29e912_idx')],
            },
        ),
    ]
